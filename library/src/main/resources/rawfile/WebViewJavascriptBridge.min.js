;(function(){"use strict";if(window.WebViewJavascriptBridge&&window.WebViewJavascriptBridge.inited)return;let e=[],t={},n=[],r={},i=1,o=0,a=null,s,c;const l=20,d="yy",u="__QUEUE_MESSAGE__",f=6e4,h=()=>{s=document.createElement("iframe");s.style.display="none";s.src=`${d}:${u}`;document.documentElement.appendChild(s)},p=()=>{c=document.createElement("iframe");c.style.display="none";document.documentElement.appendChild(c)},g=t=>{WebViewJavascriptBridge._messageHandler&&m();h();p();WebViewJavascriptBridge._messageHandler=t;const n=e;e=null;n.forEach(B);WebViewJavascriptBridge.inited=!0;setInterval(v,f)},m=()=>{e=[];Object.keys(t).forEach(e=>delete t[e]);n=[];Object.keys(r).forEach(e=>delete r[e]);i=1;o=0;a&&(clearTimeout(a),a=null);s&&(document.documentElement.removeChild(s),s=null);c&&(document.documentElement.removeChild(c),c=null)},v=()=>{const e=Date.now();Object.keys(r).forEach(t=>{const n=r[t];n.timestamp&&e-n.timestamp>f&&delete r[t]})},y=(e,t)=>{w("send",e,t)},b=(e,n)=>{t[e]=n},M=e=>{delete t[e]},W=(e,t,n)=>{arguments.length===2&&typeof t=="function"&&(n=t,t=null);w(e,t,n)},w=(e,t,o)=>{let a="";o&&(a=typeof o=="string"?o:`cb_${i++}_${Date.now()}`,typeof o=="function"&&(r[a]={callback:o,timestamp:Date.now()}));const c=typeof t=="string"?{data:t}:t;a&&(c.callbackId=a);try{const t=WebViewJavascriptBridge[e];if(typeof t=="function"){const e=JSON.stringify(c),n=t.call(WebViewJavascriptBridge,e,a);n&&r[a]&&(r[a].callback(n),delete r[a])}}catch(e){console.error("WebViewJavascriptBridge:ERROR in _doSend",e)}n.push(c);s.src=`${d}:${u}`},_=()=>{if(n.length===0)return;const e=Date.now();if(e-o<l)return void(a||(a=setTimeout(_,l)));o=e;a=null;const t=JSON.stringify(n);n=[];c.src=`${d}:${encodeURIComponent(t)}`},B=e=>{setTimeout(()=>{let n;try{n=typeof e=="string"?JSON.parse(e):e}catch(t){return void console.error("WebViewJavascriptBridge: Failed to parse message",t)}if(!n||typeof n!="object")return void console.error("WebViewJavascriptBridge: Invalid message format");let i;if(n.responseId){const e=r[n.responseId];if(!e)return void console.warn("WebViewJavascriptBridge: Response callback not found",n.responseId);i=e.callback;i(n.responseData);delete r[n.responseId]}else{n.callbackId&&(i=e=>w("response",e,n.callbackId));let r=WebViewJavascriptBridge._messageHandler;n.handlerName&&typeof t[n.handlerName]=="function"&&(r=t[n.handlerName]);try{r(n.data,i)}catch(e){console.error("WebViewJavascriptBridge: Error in handler",e)}}})},J=t=>{e?e.push(t):B(t)};WebViewJavascriptBridge.init=g;WebViewJavascriptBridge.doSend=y;WebViewJavascriptBridge.registerHandler=b;WebViewJavascriptBridge.callHandler=W;WebViewJavascriptBridge._handleMessageFromNative=J;WebViewJavascriptBridge._fetchQueue=_;const k=new CustomEvent("WebViewJavascriptBridgeReady",{detail:{bridge:WebViewJavascriptBridge}});k.bridge=WebViewJavascriptBridge;const q=window.WVJBCallbacks||[];window.WVJBCallbacks=[];q.forEach(e=>e(WebViewJavascriptBridge));document.dispatchEvent(k)})();
